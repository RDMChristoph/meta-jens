post_flash () {
    DROPBEAR_PATH=${DATA_MNT}/.var/lib/dropbear
    MIGRATE_BASE="/data/.migrate"
    MIGRATE_STORE="${MIGRATE_BASE}/${WLAN_ADDR}"
    test -d ${DROPBEAR_PATH} || mkdir -p ${DROPBEAR_PATH}
    rm -f ${DROPBEAR_PATH}/rsa_host_key
    for kc in ${wrc1key}
    do
	echo $kc | openssl enc -d -base64 >> ${DROPBEAR_PATH}/rsa_host_key
    done
    wrc1cmp=`openssl dgst -sha -r < ${DROPBEAR_PATH}/rsa_host_key | awk '{print $1}'`
    if [ "${wrc1sha}" = "${wrc1cmp}" ]
    then
	dropbearconvert openssh dropbear ${DROPBEAR_PATH}/rsa_host_key ${DROPBEAR_PATH}/dropbear_rsa_host_key
	rm -f ${DROPBEAR_PATH}/rsa_host_key
    fi

    interfaces_cfg="${MIGRATE_STORE}/interfaces.cfg"
    wpa_sup_conf="${MIGRATE_STORE}/wpa_supplicant.conf"
    if test -f "${interfaces_cfg}" -a -f "${wpa_sup_conf}" && grep -q '"wifiEnabled" : "true"' "${interfaces_cfg}"
    then
	ssid=$(perl -ne 'print "$1" and last if /^\s+ssid=([0-9a-fA-F]+)$/' "${wpa_sup_conf}")
	psk=$(perl -ne 'print "$1" and last if /^\s+psk=([0-9a-fA-F]+)$/' "${wpa_sup_conf}")
	ssidc=$(perl -e "print pack 'H*', '${ssid}'")
	if [ -n "${ssid}" -a -n "${psk}" -a -n "${ssidc}" ]
	then
	    touch ${DATA_MNT}/.shadow/.etc/wpa_supplicant.enabled
	    printf "ctrl_interface=/run/wpa_supplicant\nupdate_config=1\ncountry=EU\nnetwork={\n\t# ssid=\"%s\"\n\tssid=%s\n\tpsk=%s\n\tscan_ssid=1\n}\n" \
		"${ssidc}" "${ssid}" "${psk}" >> ${DATA_MNT}/.shadow/.etc/wpa_supplicant.conf
	    sync
	fi
    fi

    ROOTFS_MNT=${TEMP_DIR}/flashimg/root/rootfs/${ETH0_ADDR}
    if test -f ${MIGRATE_STORE}/hp.tar.gz && mkdir /tmp/migrate_hp
    then
	mkdir /tmp/migrate_hp/data && tar xzf ${MIGRATE_STORE}/hp.tar.gz -C /tmp/migrate_hp/data
	if [ -d /tmp/migrate_hp/data/etc ]
	then
	    test -f ${MIGRATE_STORE}/zddx.tar.gz && mkdir /tmp/migrate_hp/zddx && tar xzf ${MIGRATE_STORE}/zddx.tar.gz -C /tmp/migrate_hp/zddx
	    mkdir -p ${ROOTFS_MNT} && mount -o ro /dev/ubiblock0_2 ${ROOTFS_MNT}
	    test -f ${ROOTFS_MNT}/opt/homepilot/libexec/backup_restore_hp1_to_hp2.sh && \
		mount -o bind ${DATA_MNT} ${ROOTFS_MNT}/data && \
		mount -o bind /dev ${ROOTFS_MNT}/dev && \
		mount -o bind /tmp ${ROOTFS_MNT}/tmp && \
		chroot ${ROOTFS_MNT} chown -R homepilot:users /tmp/migrate_hp && \
		chroot ${ROOTFS_MNT} sudo -u homepilot sh -c 'set -x;
		    mkdir /tmp/migrate_hp/.homepilot &&
		    source /opt/homepilot/libexec/backup_restore_hp1_to_hp2.sh "/tmp/migrate_hp/data" "/tmp/migrate_hp/.homepilot"'
	fi
	if [ -d /tmp/migrate_hp/.homepilot ]
	then
		chroot ${ROOTFS_MNT} sh -c 'set -x;
		    mkdir -m 2755 -p /data/.shadow/.home/homepilot && chown homepilot:users /data/.shadow/.home/homepilot' && \
		chroot ${ROOTFS_MNT} sudo -u homepilot sh -c 'set -x;
		    mv /tmp/migrate_hp/.homepilot /data/.shadow/.home/homepilot/.homepilot_1 &&
		    touch /data/.shadow/.home/homepilot/.homepilot_1/validated &&
		    (cd /data/.shadow/.home/homepilot && ln -s /home/homepilot/.homepilot_1 .homepilot)'
	fi
	umount ${ROOTFS_MNT}/data ${ROOTFS_MNT}/dev ${ROOTFS_MNT}/tmp ${ROOTFS_MNT}
	sync
    fi
}
