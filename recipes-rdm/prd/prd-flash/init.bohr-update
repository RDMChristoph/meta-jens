. @LEDCTRL@/ledctrl

trigger_error () {
    led_error
    exit 1
}

trigger_fail () {
    led_failure

    poweroff
    exit 1 # safety first
}

trigger_recover () {
    led_recover_update
}

load_wifi () {
    modprobe libertas_sdio
    modprobe mwifiex_sdio
    sleep 2
    # no udev on update-usb-stick
    WLAN_DEV=`echo /sys/class/net/[mw]lan0`
    test -n "${WLAN_DEV}" -a -d "${WLAN_DEV}" || trigger_fail
    WLAN_ADDR=`cat "${WLAN_DEV}/address" | sed -e 's/://g'`
    test -n "${WLAN_ADDR}" || trigger_fail
}

trigger_root () {
    load_wifi

    if [ `fw_printenv wrc1key 2>/dev/null | wc -l` -eq 0 ]
    then
	# no wrc1key backup'ed - fresh update starts
	ubiattach /dev/ubi_ctrl -m 2

	test -e /dev/ubi0_4 && trigger_fail

	mkdir -p /run/media/ubi0_0
	mount /dev/ubi0_0 /run/media/ubi0_0

	avail_hp_major_version=$(source /run/media/ubi0_0/etc/serverbox/version; echo "${MAJOR}")

	led_root_update

	if test "${avail_hp_major_version}" -gt 2 && mkdir -p /data/.migrate/${WLAN_ADDR}; then
	    test -f /run/media/ubi0_0/etc/serverbox/network/interfaces.cfg && cp /run/media/ubi0_0/etc/serverbox/network/interfaces.cfg /data/.migrate/${WLAN_ADDR}/
	    test -f /run/media/ubi0_0/etc/wpa_supplicant.conf && cp /run/media/ubi0_0/etc/wpa_supplicant.conf /data/.migrate/${WLAN_ADDR}/

	    ( cd /run/media/ubi0_0 && \
		test -f etc/hp_backups/backup.files && \
		perl -ne 's,^/,,; -e $_ and printf "%s\n", $_ for glob $_' etc/hp_backups/backup.files > /data/.migrate/${WLAN_ADDR}/hp.files && \
		tar czf /data/.migrate/${WLAN_ADDR}/hp.tar.gz -T /data/.migrate/${WLAN_ADDR}/hp.files && \
		cd bin/homepilot/zwave/z-way-server-u2/config/zddx && \
		tar czf /data/.migrate/${WLAN_ADDR}/zddx.tar.gz *DevicesData.xml )
	fi

	flash_erase /dev/mtd0 0 0
	flash_uboot
	uboot_setenv
	fw_setenv wrc1key `cat /run/media/ubi0_0/home/${ETH0_ADDR}/.ssh/id_rsa | openssl enc -base64`
	fw_setenv wrc1sha `cat /run/media/ubi0_0/home/${ETH0_ADDR}/.ssh/id_rsa | openssl dgst -sha -r | awk '{print $1}'`

	umount /run/media/ubi0_0
	reboot
    else
	wrc1key="`fw_printenv -n wrc1key`"
	wrc1sha="`fw_printenv -n wrc1sha`"

	led_root_update
    fi
}

silence_recover () {
    silence_recover_update
}

silence_root () {
    silence_root_update
}
