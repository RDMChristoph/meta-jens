--- a/kernel-module-imx-gpu-viv-src/hal/os/linux/kernel/gc_hal_kernel_device.c	2015-09-30 19:43:08.868380272 +0200
+++ b/kernel-module-imx-gpu-viv-src/hal/os/linux/kernel/gc_hal_kernel_device.c	2015-09-30 19:44:04.416381710 +0200
@@ -2114,7 +2114,7 @@
 #else
 #if gcdMULTI_GPU
     ret = request_irq(
-        Device->irqLine3D[gcvCORE_3D_0_ID], isrRoutine3D0, IRQF_DISABLED,
+        Device->irqLine3D[gcvCORE_3D_0_ID], isrRoutine3D0, 0,
         "galcore_3d_0", Device
         );
 
@@ -2135,7 +2135,7 @@
 
 #if gcdMULTI_GPU > 1
     ret = request_irq(
-        Device->irqLine3D[gcvCORE_3D_1_ID], isrRoutine3D1, IRQF_DISABLED,
+        Device->irqLine3D[gcvCORE_3D_1_ID], isrRoutine3D1, 0,
         "galcore_3d_1", Device
         );
 
@@ -2156,7 +2156,7 @@
 #endif
 #elif gcdMULTI_GPU_AFFINITY
     ret = request_irq(
-        Device->irqLines[gcvCORE_MAJOR], isrRoutine3D0, IRQF_DISABLED,
+        Device->irqLines[gcvCORE_MAJOR], isrRoutine3D0, 0,
         "galcore_3d_0", Device
         );
 
@@ -2176,7 +2176,7 @@
     Device->isrInitializeds[gcvCORE_MAJOR] = gcvTRUE;
 
     ret = request_irq(
-        Device->irqLines[gcvCORE_OCL], isrRoutine3D1, IRQF_DISABLED,
+        Device->irqLines[gcvCORE_OCL], isrRoutine3D1, 0,
         "galcore_3d_1", Device
         );
 
@@ -2196,7 +2196,7 @@
     Device->isrInitializeds[gcvCORE_OCL] = gcvTRUE;
 #else
     ret = request_irq(
-        Device->irqLines[gcvCORE_MAJOR], isrRoutine, IRQF_DISABLED,
+        Device->irqLines[gcvCORE_MAJOR], isrRoutine, 0,
         "galcore interrupt service", Device
         );
 
@@ -2255,7 +2255,7 @@
         );
 #else
     ret = request_irq(
-        Device->irqLines[gcvCORE_2D], isrRoutine2D, IRQF_DISABLED,
+        Device->irqLines[gcvCORE_2D], isrRoutine2D, 0,
         "galcore interrupt service for 2D", Device
         );
 #endif
@@ -2313,7 +2313,7 @@
         );
 #else
     ret = request_irq(
-        Device->irqLines[gcvCORE_VG], isrRoutineVG, IRQF_DISABLED,
+        Device->irqLines[gcvCORE_VG], isrRoutineVG, 0,
         "galcore interrupt service for 2D", Device
         );
 #endif
